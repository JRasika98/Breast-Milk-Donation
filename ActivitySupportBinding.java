// Generated by view binder compiler. Do not edit!
package com.rasika.nurturenectar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rasika.nurturenectar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySupportBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView lblBrakdown;

  @NonNull
  public final TextView lblDisputing;

  @NonNull
  public final TextView lblEmail;

  @NonNull
  public final TextView lblPhone;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView txtBrakedown;

  @NonNull
  public final TextView txtDisputing;

  @NonNull
  public final TextView txtEmail;

  @NonNull
  public final TextView txtPhone;

  private ActivitySupportBinding(@NonNull ConstraintLayout rootView, @NonNull TextView lblBrakdown,
      @NonNull TextView lblDisputing, @NonNull TextView lblEmail, @NonNull TextView lblPhone,
      @NonNull TextView textView9, @NonNull TextView txtBrakedown, @NonNull TextView txtDisputing,
      @NonNull TextView txtEmail, @NonNull TextView txtPhone) {
    this.rootView = rootView;
    this.lblBrakdown = lblBrakdown;
    this.lblDisputing = lblDisputing;
    this.lblEmail = lblEmail;
    this.lblPhone = lblPhone;
    this.textView9 = textView9;
    this.txtBrakedown = txtBrakedown;
    this.txtDisputing = txtDisputing;
    this.txtEmail = txtEmail;
    this.txtPhone = txtPhone;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySupportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySupportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_support, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySupportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.lblBrakdown;
      TextView lblBrakdown = ViewBindings.findChildViewById(rootView, id);
      if (lblBrakdown == null) {
        break missingId;
      }

      id = R.id.lblDisputing;
      TextView lblDisputing = ViewBindings.findChildViewById(rootView, id);
      if (lblDisputing == null) {
        break missingId;
      }

      id = R.id.lblEmail;
      TextView lblEmail = ViewBindings.findChildViewById(rootView, id);
      if (lblEmail == null) {
        break missingId;
      }

      id = R.id.lblPhone;
      TextView lblPhone = ViewBindings.findChildViewById(rootView, id);
      if (lblPhone == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.txtBrakedown;
      TextView txtBrakedown = ViewBindings.findChildViewById(rootView, id);
      if (txtBrakedown == null) {
        break missingId;
      }

      id = R.id.txtDisputing;
      TextView txtDisputing = ViewBindings.findChildViewById(rootView, id);
      if (txtDisputing == null) {
        break missingId;
      }

      id = R.id.txtEmail;
      TextView txtEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtEmail == null) {
        break missingId;
      }

      id = R.id.txtPhone;
      TextView txtPhone = ViewBindings.findChildViewById(rootView, id);
      if (txtPhone == null) {
        break missingId;
      }

      return new ActivitySupportBinding((ConstraintLayout) rootView, lblBrakdown, lblDisputing,
          lblEmail, lblPhone, textView9, txtBrakedown, txtDisputing, txtEmail, txtPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
